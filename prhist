#!/usr/bin/env Rscript
# -h flag gives details on inputs

args = commandArgs(trailingOnly = T)

nbins = 20
max = 20
log = FALSE
no_file = TRUE
column_names="all"

# parse command line arguments
for(flag in c("-b=", "-m=", "--log", "-h", "-c=")){
	if(sum(grepl(flag, args)) == 1){
		full_flag = args[grepl(flag, args)]
		flag_value = gsub(flag, "", full_flag)
		if(grepl("-b=", full_flag)){
			nbins = as.numeric(flag_value)
		}else if(grepl("-m=", full_flag)){
			max = as.numeric(flag_value)
		}else if(grepl("--log", full_flag)){
			log = TRUE
		}else if(grepl("-c=", full_flag)){
			column_names = strsplit(flag_value, split = ",")[[1]]
		}else if(grepl("-h", full_flag)){
			cat("inputs:\n",
				'-c=column_names (comma delimmited)["all"]\n',
				"-b=bin_num [20]\n",
				"-m=max_height [20]\n",
				"--log [default: linear]\n",
				"input file\n")
			quit()
		}
		args <- args[!grepl(flag, args)]
	}
}

# check for file in arguments
if(length(args) == 0){
	cat("no file\n")
	quit()
}

# read in file and select columns if specified
vv = read.table(args[1], header = T)
if(column_names[1] != "all"){
	idx <- sapply(column_names, function(x) which(grepl(x, colnames(vv))))
	vv = vv[,idx, drop =F]
}

# draw histograms for numeric columns selected
for( column_num in seq(ncol(vv))){
	if( is.numeric(vv[,column_num])){
		if(log & min(vv[,column_num]) >= 0){
			cat("\n\tcolumn number ", column_num, ", log_10 ", colnames(vv)[column_num], "\n\n")
                        myhist = hist(log(vv[,column_num], 10), plot = F, breaks = nbins)
                        max_density = max(myhist$density)
		}else{
			cat("\n\tcolumn number ", column_num, ", ", colnames(vv)[column_num], "\n\n")
			myhist = hist(vv[,column_num], plot = F, breaks = nbins)
			max_density = max(myhist$density)
		}
		for(i in seq(length(myhist$mids))){
			cat(myhist$mids[i], "\t", paste(rep("=", round(myhist$density[i]/max_density * max)), collapse = ""), "\n")
		}
	}else{
		cat("\n\tcolumn number ", column_num, ", ", colnames(vv)[column_num], " is not numeric, skipping...\n\n")
	}
}
